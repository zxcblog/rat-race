version: "3.9"
services:
  # docker run --rm -it -v "$(pwd):/workspace" --workdir /workspace openjdk:latest keytool -noprompt -keystore kafka.client.keystore.jks -alias confluent-kafka -import -file snakeoil-ca-1.crt -storepass confluent -keypass confluent  -ext "SAN=dns:confluent-kafka,dns:localhost"
  # docker run --rm -it -v "$(pwd):/workspace" --workdir /workspace openjdk:latest keytool -noprompt -keystore kafka.client.truststore.jks -alias CARoot -import -file snakeoil-ca-1.crt -storepass confluent -keypass confluent
  confluent-kafka:
    image: chainguard/confluent-kafka:latest
    container_name: confluent-kafka
    hostname: confluent-kafka
    ports:
      - "9092:9092"
    volumes:
      - "./data/kafka_cluster/confluent/certs:/etc/kafka/secrets"
    environment:
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: confluent-kafka
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@confluent-kafka:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://confluent-kafka:29092,SASL_SSL://confluent-kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://confluent-kafka:29092,CONTROLLER://confluent-kafka:29093,SASL_SSL://0.0.0.0:9092
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_SSL
      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                     username=\"client\" \
                     password=\"client-secret\";"
      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.client.truststore.jks
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.client.keystore.jks
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_SSL_KEY_PASSWORD: confluent
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker_truststore_creds
      # enables 2-way authentication
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf
      KAFKA_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=(.*?),OU=TEST.*$$/$$1/,DEFAULT

    networks:
      - rat-race
networks:
  rat-race:
    driver: bridge
    name: rat-race
